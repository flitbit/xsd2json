{
	"$": {
		"xmlns:xs": "http://www.w3.org/2001/XMLSchema",
		"elementFormDefault": "qualified",
		"xml:lang": "EN",
		"targetNamespace": "http://www.w3.org/2001/XMLSchema",
		"version": "1.0"
	},
	"xs:annotation": [
		{
			"xs:documentation": [
				" Part 1 version: structures.xsd (rec-20120405) Part 2 version: datatypes.xsd (rec-20120405) "
			]
		},
		{
			"xs:documentation": [
				{
					"_": " The schema corresponding to this document is normative, with respect to the syntactic constraints it expresses in the XML Schema Definition Language. The documentation (within 'documentation' elements) below, is not normative, but rather highlights important aspects of the W3C Recommendation of which this is a part. See below (at the bottom of this document) for information about the revision and namespace-versioning policy governing this schema document. ",
					"$": {
						"source": "../structures/structures.html"
					}
				}
			]
		},
		{
			"xs:documentation": [
				" The simpleType element and all of its members are defined towards the end of this schema document."
			]
		},
		{
			"xs:documentation": [
				" simple type for the value of the 'namespace' attr of 'any' and 'anyAttribute'"
			]
		},
		{
			"xs:documentation": [
				" Value is ##any - - any non-conflicting WFXML/attribute at all ##other - - any non-conflicting WFXML/attribute from namespace other than targetNS ##local - - any unqualified non-conflicting WFXML/attribute one or - - any non-conflicting WFXML/attribute from more URI the listed namespaces references (space separated) ##targetNamespace or ##local may appear in the above list, to refer to the targetNamespace of the enclosing schema or an absent targetNamespace respectively"
			]
		},
		{
			"xs:documentation": [
				" notations for use within schema documents"
			]
		},
		{
			"xs:documentation": [
				" In keeping with the XML Schema WG's standard versioning policy, the material in this schema document will persist at the URI http://www.w3.org/2012/04/XMLSchema.xsd. At the date of issue it can also be found at the URI http://www.w3.org/2009/XMLSchema/XMLSchema.xsd. The schema document at that URI may however change in the future, in order to remain compatible with the latest version of XSD and its namespace. In other words, if XSD or the XML Schema namespace change, the version of this document at http://www.w3.org/2009/XMLSchema/XMLSchema.xsd will change accordingly; the version at http://www.w3.org/2012/04/XMLSchema.xsd will not change. Previous dated (and unchanging) versions of this schema document include: http://www.w3.org/2012/01/XMLSchema.xsd (XSD 1.1 Proposed Recommendation) http://www.w3.org/2011/07/XMLSchema.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2009/04/XMLSchema.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2004/10/XMLSchema.xsd (XSD 1.0 Recommendation, Second Edition) http://www.w3.org/2001/05/XMLSchema.xsd (XSD 1.0 Recommendation, First Edition) "
			]
		},
		{
			"xs:documentation": [
				" In keeping with the XML Schema WG's standard versioning policy, this schema document will persist at the URI http://www.w3.org/2012/04/datatypes.xsd. At the date of issue it can also be found at the URI http://www.w3.org/2009/XMLSchema/datatypes.xsd. The schema document at that URI may however change in the future, in order to remain compatible with the latest version of XSD and its namespace. In other words, if XSD or the XML Schema namespace change, the version of this document at http://www.w3.org/2009/XMLSchema/datatypes.xsd will change accordingly; the version at http://www.w3.org/2012/04/datatypes.xsd will not change. Previous dated (and unchanging) versions of this schema document include: http://www.w3.org/2012/01/datatypes.xsd (XSD 1.1 Proposed Recommendation) http://www.w3.org/2011/07/datatypes.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2009/04/datatypes.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2004/10/datatypes.xsd (XSD 1.0 Recommendation, Second Edition) http://www.w3.org/2001/05/datatypes.xsd (XSD 1.0 Recommendation, First Edition) "
			]
		}
	],
	"xs:import": [
		{
			"$": {
				"namespace": "http://www.w3.org/XML/1998/namespace",
				"schemaLocation": "http://www.w3.org/2001/xml.xsd"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" Get access to the xml: attribute groups for xml:lang as declared on 'schema' and 'documentation' below "
					]
				}
			],
			"annotation": [
				{
					"xs:documentation": [
						" Get access to the xml: attribute groups for xml:lang as declared on 'schema' and 'documentation' below "
					]
				}
			]
		}
	],
	"xs:complexType": [
		{
			"$": {
				"name": "openAttrs"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" This type is extended by almost all schema types to allow attributes from other namespaces to be added to user schemas. "
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:anyType"
							},
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "annotated"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" This type is extended by all types which allow annotation other than <schema> itself "
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:openAttrs"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "id",
										"type": "xs:ID"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "attribute"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"name": "simpleType",
												"type": "xs:localSimpleType",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attributeGroup": [
								{
									"$": {
										"ref": "xs:defRef"
									}
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "type",
										"type": "xs:QName"
									}
								},
								{
									"$": {
										"name": "use",
										"default": "optional",
										"use": "optional"
									},
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:NMTOKEN"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "prohibited"
															}
														},
														{
															"$": {
																"value": "optional"
															}
														},
														{
															"$": {
																"value": "required"
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"$": {
										"name": "default",
										"type": "xs:string"
									}
								},
								{
									"$": {
										"name": "fixed",
										"type": "xs:string"
									}
								},
								{
									"$": {
										"name": "form",
										"type": "xs:formChoice"
									}
								},
								{
									"$": {
										"name": "targetNamespace",
										"type": "xs:anyURI"
									}
								},
								{
									"$": {
										"name": "inheritable",
										"type": "xs:boolean"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "topLevelAttribute"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:attribute"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										},
										{
											"$": {
												"name": "simpleType",
												"type": "xs:localSimpleType",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "ref",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "form",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "use",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "targetNamespace",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "name",
										"type": "xs:NCName",
										"use": "required"
									}
								},
								{
									"$": {
										"name": "inheritable",
										"type": "xs:boolean"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "assertion"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:attribute": [
								{
									"$": {
										"name": "test",
										"type": "xs:string"
									}
								},
								{
									"$": {
										"name": "xpathDefaultNamespace",
										"type": "xs:xpathDefaultNamespace"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "complexType",
				"abstract": "true"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:group": [
								{
									"$": {
										"ref": "xs:complexTypeModel"
									}
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"type": "xs:NCName"
									},
									"xs:annotation": [
										{
											"xs:documentation": [
												" Will be restricted to required or prohibited"
											]
										}
									]
								},
								{
									"$": {
										"name": "mixed",
										"type": "xs:boolean",
										"use": "optional"
									},
									"xs:annotation": [
										{
											"xs:documentation": [
												" Not allowed if simpleContent child is chosen. May be overridden by setting on complexContent child."
											]
										}
									]
								},
								{
									"$": {
										"name": "abstract",
										"type": "xs:boolean",
										"default": "false",
										"use": "optional"
									}
								},
								{
									"$": {
										"name": "final",
										"type": "xs:derivationSet"
									}
								},
								{
									"$": {
										"name": "block",
										"type": "xs:derivationSet"
									}
								},
								{
									"$": {
										"name": "defaultAttributesApply",
										"type": "xs:boolean",
										"default": "true",
										"use": "optional"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "topLevelComplexType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:complexType"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:complexTypeModel"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"type": "xs:NCName",
										"use": "required"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "localComplexType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:complexType"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:complexTypeModel"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "abstract",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "final",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "block",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "restrictionType"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:sequence": [
								{
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0"
											},
											"xs:sequence": [
												{
													"xs:element": [
														{
															"$": {
																"ref": "xs:openContent",
																"minOccurs": "0"
															}
														}
													],
													"xs:group": [
														{
															"$": {
																"ref": "xs:typeDefParticle"
															}
														}
													]
												}
											],
											"xs:group": [
												{
													"$": {
														"ref": "xs:simpleRestrictionModel"
													}
												}
											]
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:attrDecls"
											}
										},
										{
											"$": {
												"ref": "xs:assertions"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "base",
										"type": "xs:QName",
										"use": "required"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "complexRestrictionType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:restrictionType"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0"
											},
											"xs:annotation": [
												{
													"xs:documentation": [
														"This choice is added simply to make this a valid restriction per the REC"
													]
												}
											],
											"xs:sequence": [
												{
													"xs:element": [
														{
															"$": {
																"ref": "xs:openContent",
																"minOccurs": "0"
															}
														}
													],
													"xs:group": [
														{
															"$": {
																"ref": "xs:typeDefParticle"
															}
														}
													]
												}
											]
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:attrDecls"
											}
										},
										{
											"$": {
												"ref": "xs:assertions"
											}
										}
									]
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "extensionType"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:openContent",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:typeDefParticle",
												"minOccurs": "0"
											}
										},
										{
											"$": {
												"ref": "xs:attrDecls"
											}
										},
										{
											"$": {
												"ref": "xs:assertions"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "base",
										"type": "xs:QName",
										"use": "required"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleRestrictionType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:restrictionType"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0"
											},
											"xs:annotation": [
												{
													"xs:documentation": [
														"This choice is added simply to make this a valid restriction per the REC"
													]
												}
											],
											"xs:group": [
												{
													"$": {
														"ref": "xs:simpleRestrictionModel"
													}
												}
											]
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:attrDecls"
											}
										},
										{
											"$": {
												"ref": "xs:assertions"
											}
										}
									]
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleExtensionType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:extensionType"
							},
							"xs:sequence": [
								{
									"xs:annotation": [
										{
											"xs:documentation": [
												" No typeDefParticle group reference"
											]
										}
									],
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:attrDecls"
											}
										},
										{
											"$": {
												"ref": "xs:assertions"
											}
										}
									]
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "element",
				"abstract": "true"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" The element element can be used either at the top level to define an element-type binding globally, or within a content model to either reference a globally-defined element or type or declare an element-type binding locally. The ref form is not allowed at the top level."
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:sequence": [
								{
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0"
											},
											"xs:element": [
												{
													"$": {
														"name": "simpleType",
														"type": "xs:localSimpleType"
													}
												},
												{
													"$": {
														"name": "complexType",
														"type": "xs:localComplexType"
													}
												}
											]
										}
									],
									"xs:element": [
										{
											"$": {
												"name": "alternative",
												"type": "xs:altType",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:identityConstraint",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									]
								}
							],
							"xs:attributeGroup": [
								{
									"$": {
										"ref": "xs:defRef"
									}
								},
								{
									"$": {
										"ref": "xs:occurs"
									}
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "type",
										"type": "xs:QName"
									}
								},
								{
									"$": {
										"name": "substitutionGroup"
									},
									"xs:simpleType": [
										{
											"xs:list": [
												{
													"$": {
														"itemType": "xs:QName"
													}
												}
											]
										}
									]
								},
								{
									"$": {
										"name": "default",
										"type": "xs:string"
									}
								},
								{
									"$": {
										"name": "fixed",
										"type": "xs:string"
									}
								},
								{
									"$": {
										"name": "nillable",
										"type": "xs:boolean",
										"use": "optional"
									}
								},
								{
									"$": {
										"name": "abstract",
										"type": "xs:boolean",
										"default": "false",
										"use": "optional"
									}
								},
								{
									"$": {
										"name": "final",
										"type": "xs:derivationSet"
									}
								},
								{
									"$": {
										"name": "block",
										"type": "xs:blockSet"
									}
								},
								{
									"$": {
										"name": "form",
										"type": "xs:formChoice"
									}
								},
								{
									"$": {
										"name": "targetNamespace",
										"type": "xs:anyURI"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "topLevelElement"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:element"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										},
										{
											"$": {
												"name": "alternative",
												"type": "xs:altType",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									],
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0"
											},
											"xs:element": [
												{
													"$": {
														"name": "simpleType",
														"type": "xs:localSimpleType"
													}
												},
												{
													"$": {
														"name": "complexType",
														"type": "xs:localComplexType"
													}
												}
											]
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:identityConstraint",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "ref",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "form",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "targetNamespace",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "minOccurs",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "maxOccurs",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "name",
										"type": "xs:NCName",
										"use": "required"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "localElement"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:element"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										},
										{
											"$": {
												"name": "alternative",
												"type": "xs:altType",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									],
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0"
											},
											"xs:element": [
												{
													"$": {
														"name": "simpleType",
														"type": "xs:localSimpleType"
													}
												},
												{
													"$": {
														"name": "complexType",
														"type": "xs:localComplexType"
													}
												}
											]
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:identityConstraint",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "substitutionGroup",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "final",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "abstract",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "altType"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" This type is used for 'alternative' elements. "
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:choice": [
								{
									"$": {
										"minOccurs": "0"
									},
									"xs:element": [
										{
											"$": {
												"name": "simpleType",
												"type": "xs:localSimpleType"
											}
										},
										{
											"$": {
												"name": "complexType",
												"type": "xs:localComplexType"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "test",
										"type": "xs:string",
										"use": "optional"
									}
								},
								{
									"$": {
										"name": "type",
										"type": "xs:QName",
										"use": "optional"
									}
								},
								{
									"$": {
										"name": "xpathDefaultNamespace",
										"type": "xs:xpathDefaultNamespace"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "group",
				"abstract": "true"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" group type for explicit groups, named top-level groups and group references"
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:group": [
								{
									"$": {
										"ref": "xs:particle",
										"minOccurs": "0",
										"maxOccurs": "unbounded"
									}
								}
							],
							"xs:attributeGroup": [
								{
									"$": {
										"ref": "xs:defRef"
									}
								},
								{
									"$": {
										"ref": "xs:occurs"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "realGroup"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:group"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0",
												"maxOccurs": "1"
											},
											"xs:element": [
												{
													"$": {
														"ref": "xs:all"
													}
												},
												{
													"$": {
														"ref": "xs:choice"
													}
												},
												{
													"$": {
														"ref": "xs:sequence"
													}
												}
											]
										}
									]
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "namedGroup"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:realGroup"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:choice": [
										{
											"$": {
												"minOccurs": "1",
												"maxOccurs": "1"
											},
											"xs:element": [
												{
													"$": {
														"name": "all"
													},
													"xs:complexType": [
														{
															"xs:complexContent": [
																{
																	"xs:restriction": [
																		{
																			"$": {
																				"base": "xs:all"
																			},
																			"xs:group": [
																				{
																					"$": {
																						"ref": "xs:allModel"
																					}
																				}
																			],
																			"xs:attribute": [
																				{
																					"$": {
																						"name": "minOccurs",
																						"use": "prohibited"
																					}
																				},
																				{
																					"$": {
																						"name": "maxOccurs",
																						"use": "prohibited"
																					}
																				}
																			],
																			"xs:anyAttribute": [
																				{
																					"$": {
																						"namespace": "##other",
																						"processContents": "lax"
																					}
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"$": {
														"name": "choice",
														"type": "xs:simpleExplicitGroup"
													}
												},
												{
													"$": {
														"name": "sequence",
														"type": "xs:simpleExplicitGroup"
													}
												}
											]
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"type": "xs:NCName",
										"use": "required"
									}
								},
								{
									"$": {
										"name": "ref",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "minOccurs",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "maxOccurs",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "groupRef"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:realGroup"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "ref",
										"type": "xs:QName",
										"use": "required"
									}
								},
								{
									"$": {
										"name": "name",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "explicitGroup"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" group type for the three kinds of group"
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:group"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:nestedParticle",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "ref",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleExplicitGroup"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:explicitGroup"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:nestedParticle",
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "minOccurs",
										"use": "prohibited"
									}
								},
								{
									"$": {
										"name": "maxOccurs",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "all"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" Only elements allowed inside"
					]
				}
			],
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:explicitGroup"
							},
							"xs:group": [
								{
									"$": {
										"ref": "xs:allModel"
									}
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "minOccurs",
										"default": "1",
										"use": "optional"
									},
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:nonNegativeInteger"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "0"
															}
														},
														{
															"$": {
																"value": "1"
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"$": {
										"name": "maxOccurs",
										"default": "1",
										"use": "optional"
									},
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:allNNI"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "0"
															}
														},
														{
															"$": {
																"value": "1"
															}
														}
													]
												}
											]
										}
									]
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "wildcard"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:attributeGroup": [
								{
									"$": {
										"ref": "xs:anyAttrGroup"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "attributeGroup",
				"abstract": "true"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:group": [
								{
									"$": {
										"ref": "xs:attrDecls"
									}
								}
							],
							"xs:attributeGroup": [
								{
									"$": {
										"ref": "xs:defRef"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "namedAttributeGroup"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:attributeGroup"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:attrDecls"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"type": "xs:NCName",
										"use": "required"
									}
								},
								{
									"$": {
										"name": "ref",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "attributeGroupRef"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:attributeGroup"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "ref",
										"type": "xs:QName",
										"use": "required"
									}
								},
								{
									"$": {
										"name": "name",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "keybase"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:sequence": [
								{
									"$": {
										"minOccurs": "0"
									},
									"xs:element": [
										{
											"$": {
												"ref": "xs:selector"
											}
										},
										{
											"$": {
												"ref": "xs:field",
												"minOccurs": "1",
												"maxOccurs": "unbounded"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"type": "xs:NCName"
									}
								},
								{
									"$": {
										"name": "ref",
										"type": "xs:QName"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "anyType",
				"mixed": "true"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" Not the real urType, but as close an approximation as we can get in the XML representation"
					]
				}
			],
			"xs:sequence": [
				{
					"xs:any": [
						{
							"$": {
								"minOccurs": "0",
								"maxOccurs": "unbounded",
								"processContents": "lax"
							}
						}
					]
				}
			],
			"xs:anyAttribute": [
				{
					"$": {
						"processContents": "lax"
					}
				}
			]
		},
		{
			"$": {
				"name": "simpleType",
				"abstract": "true"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:group": [
								{
									"$": {
										"ref": "xs:simpleDerivation"
									}
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "final",
										"type": "xs:simpleDerivationSet"
									}
								},
								{
									"$": {
										"name": "name",
										"type": "xs:NCName"
									},
									"xs:annotation": [
										{
											"xs:documentation": [
												" Can be restricted to required or forbidden "
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "topLevelSimpleType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:simpleType"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:simpleDerivation"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"type": "xs:NCName",
										"use": "required"
									},
									"xs:annotation": [
										{
											"xs:documentation": [
												" Required at the top level "
											]
										}
									]
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "localSimpleType"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:simpleType"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									],
									"xs:group": [
										{
											"$": {
												"ref": "xs:simpleDerivation"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "name",
										"use": "prohibited"
									},
									"xs:annotation": [
										{
											"xs:documentation": [
												" Forbidden when nested "
											]
										}
									]
								},
								{
									"$": {
										"name": "final",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "facet"
			},
			"xs:complexContent": [
				{
					"xs:extension": [
						{
							"$": {
								"base": "xs:annotated"
							},
							"xs:attribute": [
								{
									"$": {
										"name": "value",
										"use": "required"
									}
								},
								{
									"$": {
										"name": "fixed",
										"type": "xs:boolean",
										"default": "false",
										"use": "optional"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "noFixedFacet"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:facet"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "fixed",
										"use": "prohibited"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "numFacet"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:facet"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "value",
										"type": "xs:nonNegativeInteger",
										"use": "required"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "intFacet"
			},
			"xs:complexContent": [
				{
					"xs:restriction": [
						{
							"$": {
								"base": "xs:facet"
							},
							"xs:sequence": [
								{
									"xs:element": [
										{
											"$": {
												"ref": "xs:annotation",
												"minOccurs": "0"
											}
										}
									]
								}
							],
							"xs:attribute": [
								{
									"$": {
										"name": "value",
										"type": "xs:integer",
										"use": "required"
									}
								}
							],
							"xs:anyAttribute": [
								{
									"$": {
										"namespace": "##other",
										"processContents": "lax"
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"xs:group": [
		{
			"$": {
				"name": "composition"
			},
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"ref": "xs:include"
							}
						},
						{
							"$": {
								"ref": "xs:import"
							}
						},
						{
							"$": {
								"ref": "xs:redefine"
							}
						},
						{
							"$": {
								"ref": "xs:override"
							}
						},
						{
							"$": {
								"ref": "xs:annotation"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "schemaTop"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" This group is for the elements which occur freely at the top level of schemas. All of their types are based on the \"annotated\" type by extension."
					]
				}
			],
			"xs:choice": [
				{
					"xs:group": [
						{
							"$": {
								"ref": "xs:redefinable"
							}
						}
					],
					"xs:element": [
						{
							"$": {
								"ref": "xs:element"
							}
						},
						{
							"$": {
								"ref": "xs:attribute"
							}
						},
						{
							"$": {
								"ref": "xs:notation"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "redefinable"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" This group is for the elements which can self-redefine (see <redefine> below)."
					]
				}
			],
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"ref": "xs:simpleType"
							}
						},
						{
							"$": {
								"ref": "xs:complexType"
							}
						},
						{
							"$": {
								"ref": "xs:group"
							}
						},
						{
							"$": {
								"ref": "xs:attributeGroup"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "typeDefParticle"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" 'complexType' uses this"
					]
				}
			],
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"name": "group",
								"type": "xs:groupRef"
							}
						},
						{
							"$": {
								"ref": "xs:all"
							}
						},
						{
							"$": {
								"ref": "xs:choice"
							}
						},
						{
							"$": {
								"ref": "xs:sequence"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "nestedParticle"
			},
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"name": "element",
								"type": "xs:localElement"
							}
						},
						{
							"$": {
								"name": "group",
								"type": "xs:groupRef"
							}
						},
						{
							"$": {
								"ref": "xs:choice"
							}
						},
						{
							"$": {
								"ref": "xs:sequence"
							}
						},
						{
							"$": {
								"ref": "xs:any"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "particle"
			},
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"name": "element",
								"type": "xs:localElement"
							}
						},
						{
							"$": {
								"name": "group",
								"type": "xs:groupRef"
							}
						},
						{
							"$": {
								"ref": "xs:all"
							}
						},
						{
							"$": {
								"ref": "xs:choice"
							}
						},
						{
							"$": {
								"ref": "xs:sequence"
							}
						},
						{
							"$": {
								"ref": "xs:any"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "attrDecls"
			},
			"xs:sequence": [
				{
					"xs:choice": [
						{
							"$": {
								"minOccurs": "0",
								"maxOccurs": "unbounded"
							},
							"xs:element": [
								{
									"$": {
										"name": "attribute",
										"type": "xs:attribute"
									}
								},
								{
									"$": {
										"name": "attributeGroup",
										"type": "xs:attributeGroupRef"
									}
								}
							]
						}
					],
					"xs:element": [
						{
							"$": {
								"ref": "xs:anyAttribute",
								"minOccurs": "0"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "assertions"
			},
			"xs:sequence": [
				{
					"xs:element": [
						{
							"$": {
								"name": "assert",
								"type": "xs:assertion",
								"minOccurs": "0",
								"maxOccurs": "unbounded"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "complexTypeModel"
			},
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"ref": "xs:simpleContent"
							}
						},
						{
							"$": {
								"ref": "xs:complexContent"
							}
						}
					],
					"xs:sequence": [
						{
							"xs:annotation": [
								{
									"xs:documentation": [
										" This branch is short for <complexContent> <restriction base=\"xs:anyType\"> ... </restriction> </complexContent>"
									]
								}
							],
							"xs:element": [
								{
									"$": {
										"ref": "xs:openContent",
										"minOccurs": "0"
									}
								}
							],
							"xs:group": [
								{
									"$": {
										"ref": "xs:typeDefParticle",
										"minOccurs": "0"
									}
								},
								{
									"$": {
										"ref": "xs:attrDecls"
									}
								},
								{
									"$": {
										"ref": "xs:assertions"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "allModel"
			},
			"xs:sequence": [
				{
					"xs:element": [
						{
							"$": {
								"ref": "xs:annotation",
								"minOccurs": "0"
							}
						}
					],
					"xs:choice": [
						{
							"$": {
								"minOccurs": "0",
								"maxOccurs": "unbounded"
							},
							"xs:annotation": [
								{
									"xs:documentation": [
										"This choice with min/max is here to avoid a pblm with the Elt:All/Choice/Seq Particle derivation constraint"
									]
								}
							],
							"xs:element": [
								{
									"$": {
										"name": "element",
										"type": "xs:localElement"
									}
								},
								{
									"$": {
										"ref": "xs:any"
									}
								},
								{
									"$": {
										"name": "group"
									},
									"xs:complexType": [
										{
											"xs:complexContent": [
												{
													"xs:restriction": [
														{
															"$": {
																"base": "xs:groupRef"
															},
															"xs:sequence": [
																{
																	"xs:element": [
																		{
																			"$": {
																				"ref": "xs:annotation",
																				"minOccurs": "0"
																			}
																		}
																	]
																}
															],
															"xs:attribute": [
																{
																	"$": {
																		"name": "minOccurs",
																		"fixed": "1",
																		"type": "xs:nonNegativeInteger"
																	}
																},
																{
																	"$": {
																		"name": "maxOccurs",
																		"fixed": "1",
																		"type": "xs:nonNegativeInteger"
																	}
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "identityConstraint"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						"The three kinds of identity constraints, all with type of or derived from 'keybase'. "
					]
				}
			],
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"ref": "xs:unique"
							}
						},
						{
							"$": {
								"ref": "xs:key"
							}
						},
						{
							"$": {
								"ref": "xs:keyref"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleDerivation"
			},
			"xs:choice": [
				{
					"xs:element": [
						{
							"$": {
								"ref": "xs:restriction"
							}
						},
						{
							"$": {
								"ref": "xs:list"
							}
						},
						{
							"$": {
								"ref": "xs:union"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleRestrictionModel"
			},
			"xs:sequence": [
				{
					"xs:element": [
						{
							"$": {
								"name": "simpleType",
								"type": "xs:localSimpleType",
								"minOccurs": "0"
							}
						}
					],
					"xs:choice": [
						{
							"$": {
								"minOccurs": "0",
								"maxOccurs": "unbounded"
							},
							"xs:element": [
								{
									"$": {
										"ref": "xs:facet"
									}
								}
							],
							"xs:any": [
								{
									"$": {
										"processContents": "lax",
										"namespace": "##other"
									}
								}
							]
						}
					]
				}
			]
		}
	],
	"xs:simpleType": [
		{
			"$": {
				"name": "formChoice"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:restriction": [
				{
					"$": {
						"base": "xs:NMTOKEN"
					},
					"xs:enumeration": [
						{
							"$": {
								"value": "qualified"
							}
						},
						{
							"$": {
								"value": "unqualified"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "reducedDerivationControl"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:restriction": [
				{
					"$": {
						"base": "xs:derivationControl"
					},
					"xs:enumeration": [
						{
							"$": {
								"value": "extension"
							}
						},
						{
							"$": {
								"value": "restriction"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "derivationSet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use",
						" #all or (possibly empty) subset of {extension, restriction}"
					]
				}
			],
			"xs:union": [
				{
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:token"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "#all"
											}
										}
									]
								}
							]
						},
						{
							"xs:list": [
								{
									"$": {
										"itemType": "xs:reducedDerivationControl"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "typeDerivationControl"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:restriction": [
				{
					"$": {
						"base": "xs:derivationControl"
					},
					"xs:enumeration": [
						{
							"$": {
								"value": "extension"
							}
						},
						{
							"$": {
								"value": "restriction"
							}
						},
						{
							"$": {
								"value": "list"
							}
						},
						{
							"$": {
								"value": "union"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "fullDerivationSet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use",
						" #all or (possibly empty) subset of {extension, restriction, list, union}"
					]
				}
			],
			"xs:union": [
				{
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:token"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "#all"
											}
										}
									]
								}
							]
						},
						{
							"xs:list": [
								{
									"$": {
										"itemType": "xs:typeDerivationControl"
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "allNNI"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" for maxOccurs"
					]
				}
			],
			"xs:union": [
				{
					"$": {
						"memberTypes": "xs:nonNegativeInteger"
					},
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:NMTOKEN"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "unbounded"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "blockSet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use",
						" #all or (possibly empty) subset of {substitution, extension, restriction}"
					]
				}
			],
			"xs:union": [
				{
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:token"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "#all"
											}
										}
									]
								}
							]
						},
						{
							"xs:list": [
								{
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:derivationControl"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "extension"
															}
														},
														{
															"$": {
																"value": "restriction"
															}
														},
														{
															"$": {
																"value": "substitution"
															}
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "namespaceList"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:union": [
				{
					"$": {
						"memberTypes": "xs:specialNamespaceList xs:basicNamespaceList"
					}
				}
			]
		},
		{
			"$": {
				"name": "basicNamespaceList"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:list": [
				{
					"xs:simpleType": [
						{
							"xs:union": [
								{
									"$": {
										"memberTypes": "xs:anyURI"
									},
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:token"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "##targetNamespace"
															}
														},
														{
															"$": {
																"value": "##local"
															}
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "specialNamespaceList"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:restriction": [
				{
					"$": {
						"base": "xs:token"
					},
					"xs:enumeration": [
						{
							"$": {
								"value": "##any"
							}
						},
						{
							"$": {
								"value": "##other"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "qnameList"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use "
					]
				}
			],
			"xs:list": [
				{
					"xs:simpleType": [
						{
							"xs:union": [
								{
									"$": {
										"memberTypes": "xs:QName"
									},
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:token"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "##defined"
															}
														},
														{
															"$": {
																"value": "##definedSibling"
															}
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "qnameListA"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use "
					]
				}
			],
			"xs:list": [
				{
					"xs:simpleType": [
						{
							"xs:union": [
								{
									"$": {
										"memberTypes": "xs:QName"
									},
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:token"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "##defined"
															}
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "xpathDefaultNamespace"
			},
			"xs:union": [
				{
					"$": {
						"memberTypes": "xs:anyURI"
					},
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:token"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "##defaultNamespace"
											}
										},
										{
											"$": {
												"value": "##targetNamespace"
											}
										},
										{
											"$": {
												"value": "##local"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "public"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use",
						" A public identifier, per ISO 8879"
					]
				}
			],
			"xs:restriction": [
				{
					"$": {
						"base": "xs:token"
					}
				}
			]
		},
		{
			"$": {
				"name": "derivationControl"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" A utility type, not for public use"
					]
				}
			],
			"xs:restriction": [
				{
					"$": {
						"base": "xs:NMTOKEN"
					},
					"xs:enumeration": [
						{
							"$": {
								"value": "substitution"
							}
						},
						{
							"$": {
								"value": "extension"
							}
						},
						{
							"$": {
								"value": "restriction"
							}
						},
						{
							"$": {
								"value": "list"
							}
						},
						{
							"$": {
								"value": "union"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleDerivationSet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" #all or (possibly empty) subset of {restriction, extension, union, list} ",
						" A utility type, not for public use"
					]
				}
			],
			"xs:union": [
				{
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:token"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "#all"
											}
										}
									]
								}
							]
						},
						{
							"xs:list": [
								{
									"xs:simpleType": [
										{
											"xs:restriction": [
												{
													"$": {
														"base": "xs:derivationControl"
													},
													"xs:enumeration": [
														{
															"$": {
																"value": "list"
															}
														},
														{
															"$": {
																"value": "union"
															}
														},
														{
															"$": {
																"value": "restriction"
															}
														},
														{
															"$": {
																"value": "extension"
															}
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"xs:element": [
		{
			"$": {
				"name": "schema",
				"id": "schema"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-schema"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:openAttrs"
									},
									"xs:sequence": [
										{
											"xs:group": [
												{
													"$": {
														"ref": "xs:composition",
														"minOccurs": "0",
														"maxOccurs": "unbounded"
													}
												}
											],
											"xs:sequence": [
												{
													"$": {
														"minOccurs": "0"
													},
													"xs:element": [
														{
															"$": {
																"ref": "xs:defaultOpenContent"
															}
														},
														{
															"$": {
																"ref": "xs:annotation",
																"minOccurs": "0",
																"maxOccurs": "unbounded"
															}
														}
													]
												},
												{
													"$": {
														"minOccurs": "0",
														"maxOccurs": "unbounded"
													},
													"xs:group": [
														{
															"$": {
																"ref": "xs:schemaTop"
															}
														}
													],
													"xs:element": [
														{
															"$": {
																"ref": "xs:annotation",
																"minOccurs": "0",
																"maxOccurs": "unbounded"
															}
														}
													]
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "targetNamespace",
												"type": "xs:anyURI"
											}
										},
										{
											"$": {
												"name": "version",
												"type": "xs:token"
											}
										},
										{
											"$": {
												"name": "finalDefault",
												"type": "xs:fullDerivationSet",
												"default": "",
												"use": "optional"
											}
										},
										{
											"$": {
												"name": "blockDefault",
												"type": "xs:blockSet",
												"default": "",
												"use": "optional"
											}
										},
										{
											"$": {
												"name": "attributeFormDefault",
												"type": "xs:formChoice",
												"default": "unqualified",
												"use": "optional"
											}
										},
										{
											"$": {
												"name": "elementFormDefault",
												"type": "xs:formChoice",
												"default": "unqualified",
												"use": "optional"
											}
										},
										{
											"$": {
												"name": "defaultAttributes",
												"type": "xs:QName"
											}
										},
										{
											"$": {
												"name": "xpathDefaultNamespace",
												"type": "xs:xpathDefaultNamespace",
												"default": "##local",
												"use": "optional"
											}
										},
										{
											"$": {
												"name": "id",
												"type": "xs:ID"
											}
										},
										{
											"$": {
												"ref": "xml:lang"
											}
										}
									]
								}
							]
						}
					]
				}
			],
			"xs:key": [
				{
					"$": {
						"name": "element"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": "xs:element"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				},
				{
					"$": {
						"name": "attribute"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": "xs:attribute"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				},
				{
					"$": {
						"name": "type"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": "xs:complexType|xs:simpleType"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				},
				{
					"$": {
						"name": "group"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": "xs:group"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				},
				{
					"$": {
						"name": "attributeGroup"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": "xs:attributeGroup"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				},
				{
					"$": {
						"name": "notation"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": "xs:notation"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				},
				{
					"$": {
						"name": "identityConstraint"
					},
					"xs:selector": [
						{
							"$": {
								"xpath": ".//xs:key|.//xs:unique|.//xs:keyref"
							}
						}
					],
					"xs:field": [
						{
							"$": {
								"xpath": "@name"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "anyAttribute",
				"id": "anyAttribute"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-anyAttribute"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:wildcard"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "notQName",
												"type": "xs:qnameListA",
												"use": "optional"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "complexContent",
				"id": "complexContent"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-complexContent"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:choice": [
										{
											"xs:element": [
												{
													"$": {
														"name": "restriction",
														"type": "xs:complexRestrictionType"
													}
												},
												{
													"$": {
														"name": "extension",
														"type": "xs:extensionType"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "mixed",
												"type": "xs:boolean"
											},
											"xs:annotation": [
												{
													"xs:documentation": [
														" Overrides any setting on complexType parent."
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "openContent",
				"id": "openContent"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-openContent"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"name": "any",
														"minOccurs": "0",
														"type": "xs:wildcard"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "mode",
												"default": "interleave",
												"use": "optional"
											},
											"xs:simpleType": [
												{
													"xs:restriction": [
														{
															"$": {
																"base": "xs:NMTOKEN"
															},
															"xs:enumeration": [
																{
																	"$": {
																		"value": "none"
																	}
																},
																{
																	"$": {
																		"value": "interleave"
																	}
																},
																{
																	"$": {
																		"value": "suffix"
																	}
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "defaultOpenContent",
				"id": "defaultOpenContent"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-defaultOpenContent"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"name": "any",
														"type": "xs:wildcard"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "appliesToEmpty",
												"type": "xs:boolean",
												"default": "false",
												"use": "optional"
											}
										},
										{
											"$": {
												"name": "mode",
												"default": "interleave",
												"use": "optional"
											},
											"xs:simpleType": [
												{
													"xs:restriction": [
														{
															"$": {
																"base": "xs:NMTOKEN"
															},
															"xs:enumeration": [
																{
																	"$": {
																		"value": "interleave"
																	}
																},
																{
																	"$": {
																		"value": "suffix"
																	}
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleContent",
				"id": "simpleContent"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-simpleContent"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:choice": [
										{
											"xs:element": [
												{
													"$": {
														"name": "restriction",
														"type": "xs:simpleRestrictionType"
													}
												},
												{
													"$": {
														"name": "extension",
														"type": "xs:simpleExtensionType"
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "complexType",
				"type": "xs:topLevelComplexType",
				"id": "complexType"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-complexType"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "element",
				"type": "xs:topLevelElement",
				"id": "element"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-element"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "all",
				"type": "xs:all",
				"id": "all"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-all"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "choice",
				"type": "xs:explicitGroup",
				"id": "choice"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-choice"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "sequence",
				"type": "xs:explicitGroup",
				"id": "sequence"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-sequence"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "group",
				"type": "xs:namedGroup",
				"id": "group"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-group"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "any",
				"id": "any"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-any"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:wildcard"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "notQName",
												"type": "xs:qnameList",
												"use": "optional"
											}
										}
									],
									"xs:attributeGroup": [
										{
											"$": {
												"ref": "xs:occurs"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "attribute",
				"type": "xs:topLevelAttribute",
				"id": "attribute"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-attribute"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "attributeGroup",
				"type": "xs:namedAttributeGroup",
				"id": "attributeGroup"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-attributeGroup"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "include",
				"id": "include"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-include"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "schemaLocation",
												"type": "xs:anyURI",
												"use": "required"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "redefine",
				"id": "redefine"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-redefine"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:openAttrs"
									},
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											},
											"xs:element": [
												{
													"$": {
														"ref": "xs:annotation"
													}
												}
											],
											"xs:group": [
												{
													"$": {
														"ref": "xs:redefinable"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "schemaLocation",
												"type": "xs:anyURI",
												"use": "required"
											}
										},
										{
											"$": {
												"name": "id",
												"type": "xs:ID"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "override",
				"id": "override"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-override"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:openAttrs"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"ref": "xs:annotation",
														"minOccurs": "0"
													}
												}
											],
											"xs:group": [
												{
													"$": {
														"ref": "xs:schemaTop",
														"minOccurs": "0",
														"maxOccurs": "unbounded"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "schemaLocation",
												"type": "xs:anyURI",
												"use": "required"
											}
										},
										{
											"$": {
												"name": "id",
												"type": "xs:ID"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "import",
				"id": "import"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-import"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "namespace",
												"type": "xs:anyURI"
											}
										},
										{
											"$": {
												"name": "schemaLocation",
												"type": "xs:anyURI"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "selector",
				"id": "selector"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-selector"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "xpath",
												"use": "required"
											},
											"xs:simpleType": [
												{
													"xs:annotation": [
														{
															"xs:documentation": [
																"A subset of XPath expressions for usein selectors",
																"A utility type, not for publicuse"
															]
														}
													],
													"xs:restriction": [
														{
															"$": {
																"base": "xs:token"
															}
														}
													]
												}
											]
										},
										{
											"$": {
												"name": "xpathDefaultNamespace",
												"type": "xs:xpathDefaultNamespace"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "field",
				"id": "field"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-field"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "xpath",
												"use": "required"
											},
											"xs:simpleType": [
												{
													"xs:annotation": [
														{
															"xs:documentation": [
																"A subset of XPath expressions for usein fields",
																"A utility type, not for publicuse"
															]
														}
													],
													"xs:restriction": [
														{
															"$": {
																"base": "xs:token"
															}
														}
													]
												}
											]
										},
										{
											"$": {
												"name": "xpathDefaultNamespace",
												"type": "xs:xpathDefaultNamespace"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "unique",
				"type": "xs:keybase",
				"id": "unique"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-unique"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "key",
				"type": "xs:keybase",
				"id": "key"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-key"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "keyref",
				"id": "keyref"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-keyref"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:keybase"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "refer",
												"type": "xs:QName"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "notation",
				"id": "notation"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-notation"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:attribute": [
										{
											"$": {
												"name": "name",
												"type": "xs:NCName",
												"use": "required"
											}
										},
										{
											"$": {
												"name": "public",
												"type": "xs:public"
											}
										},
										{
											"$": {
												"name": "system",
												"type": "xs:anyURI"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "appinfo",
				"id": "appinfo"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-appinfo"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"$": {
						"mixed": "true"
					},
					"xs:sequence": [
						{
							"$": {
								"minOccurs": "0",
								"maxOccurs": "unbounded"
							},
							"xs:any": [
								{
									"$": {
										"processContents": "lax"
									}
								}
							]
						}
					],
					"xs:attribute": [
						{
							"$": {
								"name": "source",
								"type": "xs:anyURI"
							}
						}
					],
					"xs:anyAttribute": [
						{
							"$": {
								"namespace": "##other",
								"processContents": "lax"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "documentation",
				"id": "documentation"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-documentation"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"$": {
						"mixed": "true"
					},
					"xs:sequence": [
						{
							"$": {
								"minOccurs": "0",
								"maxOccurs": "unbounded"
							},
							"xs:any": [
								{
									"$": {
										"processContents": "lax"
									}
								}
							]
						}
					],
					"xs:attribute": [
						{
							"$": {
								"name": "source",
								"type": "xs:anyURI"
							}
						},
						{
							"$": {
								"ref": "xml:lang"
							}
						}
					],
					"xs:anyAttribute": [
						{
							"$": {
								"namespace": "##other",
								"processContents": "lax"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "annotation",
				"id": "annotation"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "../structures/structures.html#element-annotation"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:openAttrs"
									},
									"xs:choice": [
										{
											"$": {
												"minOccurs": "0",
												"maxOccurs": "unbounded"
											},
											"xs:element": [
												{
													"$": {
														"ref": "xs:appinfo"
													}
												},
												{
													"$": {
														"ref": "xs:documentation"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "id",
												"type": "xs:ID"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "simpleType",
				"type": "xs:topLevelSimpleType",
				"id": "simpleType"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-simpleType"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "facet",
				"abstract": "true"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" An abstract element, representing facets in general. The facets defined by this spec are substitutable for this element, and implementation-defined facets should also name this as a substitution-group head. "
					]
				}
			]
		},
		{
			"$": {
				"name": "restriction",
				"id": "restriction"
			},
			"xs:complexType": [
				{
					"xs:annotation": [
						{
							"xs:documentation": [
								{
									"_": " base attribute and simpleType child are mutually exclusive, but one or other is required ",
									"$": {
										"source": "http://www.w3.org/TR/xmlschema11-2/#element-restriction"
									}
								}
							]
						}
					],
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:group": [
										{
											"$": {
												"ref": "xs:simpleRestrictionModel"
											}
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "base",
												"type": "xs:QName",
												"use": "optional"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "list",
				"id": "list"
			},
			"xs:complexType": [
				{
					"xs:annotation": [
						{
							"xs:documentation": [
								{
									"_": " itemType attribute and simpleType child are mutually exclusive, but one or other is required ",
									"$": {
										"source": "http://www.w3.org/TR/xmlschema11-2/#element-list"
									}
								}
							]
						}
					],
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"name": "simpleType",
														"type": "xs:localSimpleType",
														"minOccurs": "0"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "itemType",
												"type": "xs:QName",
												"use": "optional"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "union",
				"id": "union"
			},
			"xs:complexType": [
				{
					"xs:annotation": [
						{
							"xs:documentation": [
								{
									"_": " memberTypes attribute must be non-empty or there must be at least one simpleType child ",
									"$": {
										"source": "http://www.w3.org/TR/xmlschema11-2/#element-union"
									}
								}
							]
						}
					],
					"xs:complexContent": [
						{
							"xs:extension": [
								{
									"$": {
										"base": "xs:annotated"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"name": "simpleType",
														"type": "xs:localSimpleType",
														"minOccurs": "0",
														"maxOccurs": "unbounded"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "memberTypes",
												"use": "optional"
											},
											"xs:simpleType": [
												{
													"xs:list": [
														{
															"$": {
																"itemType": "xs:QName"
															}
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "minExclusive",
				"type": "xs:facet",
				"id": "minExclusive",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-minExclusive"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "minInclusive",
				"type": "xs:facet",
				"id": "minInclusive",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-minInclusive"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "maxExclusive",
				"type": "xs:facet",
				"id": "maxExclusive",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-maxExclusive"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "maxInclusive",
				"type": "xs:facet",
				"id": "maxInclusive",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-maxInclusive"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "totalDigits",
				"id": "totalDigits",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-totalDigits"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:numFacet"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"ref": "xs:annotation",
														"minOccurs": "0"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "value",
												"type": "xs:positiveInteger",
												"use": "required"
											}
										}
									],
									"xs:anyAttribute": [
										{
											"$": {
												"namespace": "##other",
												"processContents": "lax"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "fractionDigits",
				"type": "xs:numFacet",
				"id": "fractionDigits",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-fractionDigits"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "length",
				"type": "xs:numFacet",
				"id": "length",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-length"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "minLength",
				"type": "xs:numFacet",
				"id": "minLength",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-minLength"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "maxLength",
				"type": "xs:numFacet",
				"id": "maxLength",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-maxLength"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "enumeration",
				"type": "xs:noFixedFacet",
				"id": "enumeration",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-enumeration"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "whiteSpace",
				"id": "whiteSpace",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-whiteSpace"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:facet"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"ref": "xs:annotation",
														"minOccurs": "0"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "value",
												"use": "required"
											},
											"xs:simpleType": [
												{
													"xs:restriction": [
														{
															"$": {
																"base": "xs:NMTOKEN"
															},
															"xs:enumeration": [
																{
																	"$": {
																		"value": "preserve"
																	}
																},
																{
																	"$": {
																		"value": "replace"
																	}
																},
																{
																	"$": {
																		"value": "collapse"
																	}
																}
															]
														}
													]
												}
											]
										}
									],
									"xs:anyAttribute": [
										{
											"$": {
												"namespace": "##other",
												"processContents": "lax"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "pattern",
				"id": "pattern",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-pattern"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:noFixedFacet"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"ref": "xs:annotation",
														"minOccurs": "0"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "value",
												"type": "xs:string",
												"use": "required"
											}
										}
									],
									"xs:anyAttribute": [
										{
											"$": {
												"namespace": "##other",
												"processContents": "lax"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "assertion",
				"type": "xs:assertion",
				"id": "assertion",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-assertion"
							}
						}
					]
				}
			]
		},
		{
			"$": {
				"name": "explicitTimezone",
				"id": "explicitTimezone",
				"substitutionGroup": "xs:facet"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						{
							"$": {
								"source": "http://www.w3.org/TR/xmlschema11-2/#element-explicitTimezone"
							}
						}
					]
				}
			],
			"xs:complexType": [
				{
					"xs:complexContent": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:facet"
									},
									"xs:sequence": [
										{
											"xs:element": [
												{
													"$": {
														"ref": "xs:annotation",
														"minOccurs": "0"
													}
												}
											]
										}
									],
									"xs:attribute": [
										{
											"$": {
												"name": "value",
												"use": "required"
											},
											"xs:simpleType": [
												{
													"xs:restriction": [
														{
															"$": {
																"base": "xs:NMTOKEN"
															},
															"xs:enumeration": [
																{
																	"$": {
																		"value": "optional"
																	}
																},
																{
																	"$": {
																		"value": "required"
																	}
																},
																{
																	"$": {
																		"value": "prohibited"
																	}
																}
															]
														}
													]
												}
											]
										}
									],
									"xs:anyAttribute": [
										{
											"$": {
												"namespace": "##other",
												"processContents": "lax"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"xs:attributeGroup": [
		{
			"$": {
				"name": "occurs"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" for all particles"
					]
				}
			],
			"xs:attribute": [
				{
					"$": {
						"name": "minOccurs",
						"type": "xs:nonNegativeInteger",
						"default": "1",
						"use": "optional"
					}
				},
				{
					"$": {
						"name": "maxOccurs",
						"type": "xs:allNNI",
						"default": "1",
						"use": "optional"
					}
				}
			]
		},
		{
			"$": {
				"name": "defRef"
			},
			"xs:annotation": [
				{
					"xs:documentation": [
						" for element, group and attributeGroup, which both define and reference"
					]
				}
			],
			"xs:attribute": [
				{
					"$": {
						"name": "name",
						"type": "xs:NCName"
					}
				},
				{
					"$": {
						"name": "ref",
						"type": "xs:QName"
					}
				}
			]
		},
		{
			"$": {
				"name": "anyAttrGroup"
			},
			"xs:attribute": [
				{
					"$": {
						"name": "namespace",
						"type": "xs:namespaceList",
						"use": "optional"
					}
				},
				{
					"$": {
						"name": "notNamespace",
						"use": "optional"
					},
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:basicNamespaceList"
									},
									"xs:minLength": [
										{
											"$": {
												"value": "1"
											}
										}
									]
								}
							]
						}
					]
				},
				{
					"$": {
						"name": "processContents",
						"default": "strict",
						"use": "optional"
					},
					"xs:simpleType": [
						{
							"xs:restriction": [
								{
									"$": {
										"base": "xs:NMTOKEN"
									},
									"xs:enumeration": [
										{
											"$": {
												"value": "skip"
											}
										},
										{
											"$": {
												"value": "lax"
											}
										},
										{
											"$": {
												"value": "strict"
											}
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"xs:notation": [
		{
			"$": {
				"name": "XMLSchemaStructures",
				"public": "structures",
				"system": "http://www.w3.org/2000/08/XMLSchema.xsd"
			}
		},
		{
			"$": {
				"name": "XML",
				"public": "REC-xml-19980210",
				"system": "http://www.w3.org/TR/1998/REC-xml-19980210"
			}
		}
	],
	"annotation": [
		{
			"xs:documentation": [
				" Part 1 version: structures.xsd (rec-20120405) Part 2 version: datatypes.xsd (rec-20120405) "
			]
		},
		{
			"xs:documentation": [
				{
					"_": " The schema corresponding to this document is normative, with respect to the syntactic constraints it expresses in the XML Schema Definition Language. The documentation (within 'documentation' elements) below, is not normative, but rather highlights important aspects of the W3C Recommendation of which this is a part. See below (at the bottom of this document) for information about the revision and namespace-versioning policy governing this schema document. ",
					"$": {
						"source": "../structures/structures.html"
					}
				}
			]
		},
		{
			"xs:documentation": [
				" The simpleType element and all of its members are defined towards the end of this schema document."
			]
		},
		{
			"xs:documentation": [
				" simple type for the value of the 'namespace' attr of 'any' and 'anyAttribute'"
			]
		},
		{
			"xs:documentation": [
				" Value is ##any - - any non-conflicting WFXML/attribute at all ##other - - any non-conflicting WFXML/attribute from namespace other than targetNS ##local - - any unqualified non-conflicting WFXML/attribute one or - - any non-conflicting WFXML/attribute from more URI the listed namespaces references (space separated) ##targetNamespace or ##local may appear in the above list, to refer to the targetNamespace of the enclosing schema or an absent targetNamespace respectively"
			]
		},
		{
			"xs:documentation": [
				" notations for use within schema documents"
			]
		},
		{
			"xs:documentation": [
				" In keeping with the XML Schema WG's standard versioning policy, the material in this schema document will persist at the URI http://www.w3.org/2012/04/XMLSchema.xsd. At the date of issue it can also be found at the URI http://www.w3.org/2009/XMLSchema/XMLSchema.xsd. The schema document at that URI may however change in the future, in order to remain compatible with the latest version of XSD and its namespace. In other words, if XSD or the XML Schema namespace change, the version of this document at http://www.w3.org/2009/XMLSchema/XMLSchema.xsd will change accordingly; the version at http://www.w3.org/2012/04/XMLSchema.xsd will not change. Previous dated (and unchanging) versions of this schema document include: http://www.w3.org/2012/01/XMLSchema.xsd (XSD 1.1 Proposed Recommendation) http://www.w3.org/2011/07/XMLSchema.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2009/04/XMLSchema.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2004/10/XMLSchema.xsd (XSD 1.0 Recommendation, Second Edition) http://www.w3.org/2001/05/XMLSchema.xsd (XSD 1.0 Recommendation, First Edition) "
			]
		},
		{
			"xs:documentation": [
				" In keeping with the XML Schema WG's standard versioning policy, this schema document will persist at the URI http://www.w3.org/2012/04/datatypes.xsd. At the date of issue it can also be found at the URI http://www.w3.org/2009/XMLSchema/datatypes.xsd. The schema document at that URI may however change in the future, in order to remain compatible with the latest version of XSD and its namespace. In other words, if XSD or the XML Schema namespace change, the version of this document at http://www.w3.org/2009/XMLSchema/datatypes.xsd will change accordingly; the version at http://www.w3.org/2012/04/datatypes.xsd will not change. Previous dated (and unchanging) versions of this schema document include: http://www.w3.org/2012/01/datatypes.xsd (XSD 1.1 Proposed Recommendation) http://www.w3.org/2011/07/datatypes.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2009/04/datatypes.xsd (XSD 1.1 Candidate Recommendation) http://www.w3.org/2004/10/datatypes.xsd (XSD 1.0 Recommendation, Second Edition) http://www.w3.org/2001/05/datatypes.xsd (XSD 1.0 Recommendation, First Edition) "
			]
		}
	]
}